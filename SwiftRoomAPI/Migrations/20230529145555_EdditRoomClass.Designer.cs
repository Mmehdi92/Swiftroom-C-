// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwiftRoomAPI.Data;

#nullable disable

namespace SwiftRoomAPI.Migrations
{
    [DbContext(typeof(SwiftRoomDbContext))]
    [Migration("20230529145555_EdditRoomClass")]
    partial class EdditRoomClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SwiftRoomAPI.Data.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Begin = new DateTime(2023, 6, 4, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bespreking van overname praktijk",
                            End = new DateTime(2023, 6, 4, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1,
                            Title = "Afspraak Dokter met Piet"
                        },
                        new
                        {
                            Id = 2,
                            Begin = new DateTime(2023, 6, 5, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bespreking Aaandelen bla bla",
                            End = new DateTime(2023, 6, 5, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2,
                            Title = "Afspraak Bank met Jan"
                        });
                });

            modelBuilder.Entity("SwiftRoomAPI.Data.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Conference Room A",
                            ShortName = "R A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Conference Room B",
                            ShortName = " R B "
                        });
                });

            modelBuilder.Entity("SwiftRoomAPI.Data.Appointment", b =>
                {
                    b.HasOne("SwiftRoomAPI.Data.Room", "Room")
                        .WithMany("Appointments")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("SwiftRoomAPI.Data.Room", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
